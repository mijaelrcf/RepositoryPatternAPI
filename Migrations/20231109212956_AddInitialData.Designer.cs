// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryPatternAPI.Data;

#nullable disable

namespace RepositoryPatternAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231109212956_AddInitialData")]
    partial class AddInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RepositoryPatternAPI.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d13ce4bf-7d58-407f-8a2d-22c7db3acd53"),
                            AccountNumber = 201000001,
                            CreationDate = new DateTime(2023, 11, 9, 17, 29, 56, 24, DateTimeKind.Local).AddTicks(6147)
                        },
                        new
                        {
                            Id = new Guid("bb2dbef0-0012-4a09-942b-b3c8c1063ddf"),
                            AccountNumber = 201000002,
                            CreationDate = new DateTime(2023, 11, 9, 17, 29, 56, 24, DateTimeKind.Local).AddTicks(6157)
                        });
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2852414c-0c75-4357-ba2d-1fa145203f33"),
                            AccountId = new Guid("d13ce4bf-7d58-407f-8a2d-22c7db3acd53"),
                            CardNumber = 700000001,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cfef36f9-445c-4e53-b880-63f7d45c1060"),
                            AccountId = new Guid("bb2dbef0-0012-4a09-942b-b3c8c1063ddf"),
                            CardNumber = 700000002,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b1fdcfb-6500-46ed-991a-1c1e2450251d"),
                            Address = "Street 13",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mijael.rcf@gmail",
                            Name = "Mijael Callejas"
                        });
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37f9f422-d0e9-43b8-8edc-a61709f91535"),
                            AccountId = new Guid("d13ce4bf-7d58-407f-8a2d-22c7db3acd53"),
                            Amount = 100.0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(2023, 11, 9, 17, 29, 56, 24, DateTimeKind.Local).AddTicks(6211),
                            Type = "D"
                        },
                        new
                        {
                            Id = new Guid("82e8796c-6714-433c-83f3-9bda358104b2"),
                            AccountId = new Guid("d13ce4bf-7d58-407f-8a2d-22c7db3acd53"),
                            Amount = 200.0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(2023, 11, 9, 17, 29, 56, 24, DateTimeKind.Local).AddTicks(6215),
                            Type = "C"
                        },
                        new
                        {
                            Id = new Guid("0f4dcd2c-a06e-44da-8fbe-bdb4fd5e478f"),
                            AccountId = new Guid("bb2dbef0-0012-4a09-942b-b3c8c1063ddf"),
                            Amount = 150.0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(2023, 11, 9, 17, 29, 56, 24, DateTimeKind.Local).AddTicks(6218),
                            Type = "D"
                        },
                        new
                        {
                            Id = new Guid("51e3add7-ce46-492c-92c7-4b48b9c6163f"),
                            AccountId = new Guid("bb2dbef0-0012-4a09-942b-b3c8c1063ddf"),
                            Amount = 350.0,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(2023, 11, 9, 17, 29, 56, 24, DateTimeKind.Local).AddTicks(6222),
                            Type = "C"
                        });
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Card", b =>
                {
                    b.HasOne("RepositoryPatternAPI.Models.Account", "Account")
                        .WithMany("Cards")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Transaction", b =>
                {
                    b.HasOne("RepositoryPatternAPI.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Account", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
