// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryPatternAPI.Data;

#nullable disable

namespace RepositoryPatternAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RepositoryPatternAPI.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3f6784d-329c-4f30-9b1c-e808a74a4241"),
                            AccountNumber = 201000001,
                            CreationDate = new DateTime(2023, 11, 10, 11, 18, 41, 904, DateTimeKind.Local).AddTicks(3147),
                            CustomerId = new Guid("14b579b9-1eef-4bc6-8c36-881c1e9583c0")
                        },
                        new
                        {
                            Id = new Guid("5c3c785f-7299-4733-90ee-276ddda46d71"),
                            AccountNumber = 201000002,
                            CreationDate = new DateTime(2023, 11, 10, 11, 18, 41, 904, DateTimeKind.Local).AddTicks(3159),
                            CustomerId = new Guid("14b579b9-1eef-4bc6-8c36-881c1e9583c0")
                        });
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2965478f-c14c-4f20-8204-727ccca8da59"),
                            AccountId = new Guid("c3f6784d-329c-4f30-9b1c-e808a74a4241"),
                            CardNumber = 700000001,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("66354dfb-1e4a-4286-a889-d1d89ba2c2d8"),
                            AccountId = new Guid("5c3c785f-7299-4733-90ee-276ddda46d71"),
                            CardNumber = 700000002,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14b579b9-1eef-4bc6-8c36-881c1e9583c0"),
                            Address = "Street 13",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mijael.rcf@gmail",
                            Name = "Mijael Callejas"
                        });
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0600c3a2-2cf2-4aa8-955d-c8c2629da073"),
                            AccountId = new Guid("c3f6784d-329c-4f30-9b1c-e808a74a4241"),
                            Amount = 100.0,
                            CardNumber = 700000001,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(2023, 11, 10, 11, 18, 41, 904, DateTimeKind.Local).AddTicks(3221),
                            Type = "D"
                        },
                        new
                        {
                            Id = new Guid("d8a78ade-0905-4d7a-b8d8-9194ca972ca1"),
                            AccountId = new Guid("c3f6784d-329c-4f30-9b1c-e808a74a4241"),
                            Amount = 200.0,
                            CardNumber = 700000001,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(2023, 11, 10, 11, 18, 41, 904, DateTimeKind.Local).AddTicks(3225),
                            Type = "C"
                        },
                        new
                        {
                            Id = new Guid("f00bf369-5382-4138-9824-fb7604227944"),
                            AccountId = new Guid("5c3c785f-7299-4733-90ee-276ddda46d71"),
                            Amount = 150.0,
                            CardNumber = 700000002,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(2023, 11, 10, 11, 18, 41, 904, DateTimeKind.Local).AddTicks(3228),
                            Type = "D"
                        },
                        new
                        {
                            Id = new Guid("10da1618-5f14-45b5-bfd1-4501f2d43d3c"),
                            AccountId = new Guid("5c3c785f-7299-4733-90ee-276ddda46d71"),
                            Amount = 350.0,
                            CardNumber = 700000002,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionDate = new DateTime(2023, 11, 10, 11, 18, 41, 904, DateTimeKind.Local).AddTicks(3232),
                            Type = "C"
                        });
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Account", b =>
                {
                    b.HasOne("RepositoryPatternAPI.Models.Customer", null)
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Card", b =>
                {
                    b.HasOne("RepositoryPatternAPI.Models.Account", "Account")
                        .WithMany("Cards")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Transaction", b =>
                {
                    b.HasOne("RepositoryPatternAPI.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Account", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RepositoryPatternAPI.Models.Customer", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
